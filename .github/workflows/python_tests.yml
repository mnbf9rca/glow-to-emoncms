name: Python package

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master

jobs:
  container-job:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    runs-on: ubuntu-latest
    container: ubuntu:latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      mqtt:
        ports:
          # Port mapping
          - 1883:1883
          - 8883:8883
        # Docker Hub image
        image: eclipse-mosquitto:latest
        # Provide the password for postgres
        env:
          MQTT_USER: mqtt
          MQTT_PASSWORD: mqtt
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install curl
        run: |
          DEBIAN_FRONTEND=noninteractive apt update
          DEBIAN_FRONTEND=noninteractive apt install curl -y
      - uses: snok/install-poetry@v1
        with:
          version: 1.6.1 # pin the version as they keep changing their APIs
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: |
          source $VENV
          poetry install --with test --without dev  --no-interaction --no-root --sync
          python  -c "import os; print(os.environ['VIRTUAL_ENV'])"
#          pip install ruff
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics          
#      - name: Lint with ruff
#        run: |
#          TARGET_VERSION=py$(echo ${{ matrix.python-version }} | tr -d '.')
#          # stop the build if there are Python syntax errors or undefined names
#          ruff --format=github --select=E9,F63,F7,F82 --target-version=$TARGET_VERSION .
#          # default set of ruff rules with GitHub Annotations
#          # ignore long lines
#          ruff --format=github --target-version=$TARGET_VERSION --ignore=E501 .
      - name: Test with pytest
        env:
          DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
        run: |
          source .venv/bin/activate
          pytest --cov mqtt_to_eventhub_module --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}          